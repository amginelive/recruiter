# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-22 05:03
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('firstname', models.CharField(max_length=30, verbose_name='First name')),
                ('lastname', models.CharField(max_length=30, verbose_name='Last name')),
                ('slug', models.SlugField(blank=True, null=True, verbose_name='Alias/Slug')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('get_ads', models.BooleanField(default=True, verbose_name='Receive ads by email?')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Joined')),
                ('account_type', models.IntegerField(choices=[(1, 'Candidate'), (2, 'Agent')], default=1, help_text='User role selected during registration', verbose_name='Account Type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(editable=False, verbose_name='Updated At')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Phone')),
                ('photo', models.ImageField(blank=True, help_text='200x200px', null=True, upload_to='images/photo/%Y/', verbose_name='Photo')),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Inactive'), (2, 'Moderation')], default=0, verbose_name='Status')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents', to='companies.Company', verbose_name='Company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent',
                'verbose_name_plural': 'Agents',
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(editable=False, verbose_name='Updated At')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Phone')),
                ('photo', models.ImageField(blank=True, help_text='200x200px', null=True, upload_to='images/photo/%Y/', verbose_name='Photo')),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Inactive'), (2, 'Moderation')], default=0, verbose_name='Status')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Job title')),
                ('skills', models.TextField(blank=True, help_text='Comma separated skills', max_length=250, null=True, verbose_name='Skills')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Current location')),
                ('job_location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Desired job location')),
                ('job_type', models.IntegerField(blank=True, choices=[(0, 'Contract'), (1, 'Permanent')], null=True, verbose_name='Job type')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Country')),
                ('experience', models.SmallIntegerField(blank=True, null=True, verbose_name='Experience (full years)')),
                ('cv', models.FileField(blank=True, max_length=150, null=True, upload_to=users.models.get_cv_path, verbose_name='CV')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
